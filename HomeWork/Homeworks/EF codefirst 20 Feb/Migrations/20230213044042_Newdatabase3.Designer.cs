// <auto-generated />
using System;
using EF_task_20_feb.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConsoleEF.Migrations
{
    [DbContext(typeof(ProdContext))]
    [Migration("20230213044042_Newdatabase3")]
    partial class Newdatabase3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ConsoleEF.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ConsoleEF.Models.ProductBatch", b =>
                {
                    b.Property<int>("Batchid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Batchid"));

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("Batchid");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductBatches");
                });

            modelBuilder.Entity("ConsoleEF.Models.Standard", b =>
                {
                    b.Property<int>("standardid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("standardid"));

                    b.Property<string>("Standardname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("standardid");

                    b.ToTable("standards");
                });

            modelBuilder.Entity("ConsoleEF.Models.Student", b =>
                {
                    b.Property<int>("studentid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("studentid"));

                    b.Property<string>("studentname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("studentrefid")
                        .HasColumnType("int");

                    b.HasKey("studentid");

                    b.HasIndex("studentrefid");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("ConsoleEF.Models.ProductBatch", b =>
                {
                    b.HasOne("ConsoleEF.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ConsoleEF.Models.Student", b =>
                {
                    b.HasOne("ConsoleEF.Models.Standard", "Standard")
                        .WithMany("Students")
                        .HasForeignKey("studentrefid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Standard");
                });

            modelBuilder.Entity("ConsoleEF.Models.Standard", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
